name: Pre-commit Checks

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

# Cancel previous runs on new pushes
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pre-commit:
    name: üîç Pre-commit Hooks
    runs-on: ubuntu-latest
    timeout-minutes: 10

    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      TEST_DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
      ACCESS_SECRET_KEY: ${{ secrets.ACCESS_SECRET_KEY }}
      RESET_PASSWORD_SECRET_KEY: ${{ secrets.RESET_PASSWORD_SECRET_KEY }}
      VERIFICATION_SECRET_KEY: ${{ secrets.VERIFICATION_SECRET_KEY }}
      OPENAPI_OUTPUT_FILE: ${{ secrets.OPENAPI_OUTPUT_FILE }}
      CORS_ORIGINS: ${{ secrets.CORS_ORIGINS }}

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch full history for better diffs

      - name: üêç Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: ‚ö° Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "latest"

      - name: üîß Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('backend/pyproject.toml', 'backend/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: üì¶ Install backend dependencies
        working-directory: ./backend
        run: uv sync --dev --frozen

      - name: üì¶ Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: üü¢ Set up Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "pnpm"
          cache-dependency-path: frontend/pnpm-lock.yaml

      - name: üì¶ Install frontend dependencies
        working-directory: ./frontend
        run: pnpm install --frozen-lockfile

      - name: üîç Run pre-commit hooks
        uses: pre-commit/action@v3.0.1
        with:
          extra_args: --verbose --all-files

      - name: üìù Show pre-commit results
        if: failure()
        run: |
          echo "Pre-commit checks failed. Please run 'make pre-commit' locally to fix issues."
          echo "Or run 'pre-commit run --all-files' to see specific failures."
